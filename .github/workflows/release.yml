name: Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    env:
      CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
      PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

    steps:
      - uses: actions/checkout@v5
        with:
          # Fetch all history.
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      - name: Prepare release name
        run: |
          VERSION_NAME=$(grep "^VERSION_NAME=" gradle.properties | cut -d '=' -f 2)
          IS_SNAPSHOT=false
          if [[ $VERSION_NAME == *-SNAPSHOT ]]; then
            IS_SNAPSHOT=true
          else
            IS_SNAPSHOT=false
          fi

          echo "VERSION_NAME=$VERSION_NAME"
          echo "IS_SNAPSHOT=$IS_SNAPSHOT"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "IS_SNAPSHOT=$IS_SNAPSHOT" >> $GITHUB_ENV

      - name: Build CLI
        run: ./gradlew buildCLI

      - name: Build signed plugin
        run: ./gradlew signPlugin

      - name: Verify IntelliJ plugin
        run: ./gradlew verifyPlugin

      - name: Publish to Marketplace
        if: env.IS_SNAPSHOT == 'false'
        run: ./gradlew publishPlugin

      - name: Delete release if exist then create a new one
        run: |
          gh release view ${{ env.VERSION_NAME }} && gh release delete ${{ env.VERSION_NAME }} -y --cleanup-tag

          # Create a pre-release if it's a snapshot version.
          if [[ ${{ env.IS_SNAPSHOT }} == "true" ]]; then
            PRE_RELEASE_FLAG="--prerelease"
          else
            PRE_RELEASE_FLAG=""
            # Delete last snapshot if it exists to make sure `--generate-notes` works correctly.
            gh release view ${{ env.VERSION_NAME }}-SNAPSHOT && gh release delete ${{ env.VERSION_NAME }}-SNAPSHOT -y --cleanup-tag
          fi

          gh release create ${{ env.VERSION_NAME }} tools/idea-plugin/build/distributions/*-signed.zip tools/cli/build/distributions/*.zip --generate-notes $PRE_RELEASE_FLAG

      - uses: mislav/bump-homebrew-formula-action@v3
        if: env.IS_SNAPSHOT == 'false'
        with:
          formula-name: valkyrie
          formula-path: Formula/valkyrie.rb
          tag-name: ${{ env.VERSION_NAME }}
          homebrew-tap: ComposeGears/homebrew-repo
          download-url: https://github.com/ComposeGears/Valkyrie/releases/download/${{ env.VERSION_NAME }}/valkyrie-cli-${{ env.VERSION_NAME }}.zip
          commit-message: |
            Bump {{formulaName}} {{version}}
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
