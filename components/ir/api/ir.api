public final class io/github/composegears/valkyrie/ir/IrColor {
	public static final field Companion Lio/github/composegears/valkyrie/ir/IrColor$Companion;
	public static final synthetic fun box-impl (I)Lio/github/composegears/valkyrie/ir/IrColor;
	public static fun constructor-impl (I)I
	public static fun constructor-impl (J)I
	public static fun constructor-impl (Ljava/lang/String;)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public static final fun getAlpha-w2LRezQ (I)B
	public final fun getArgb ()I
	public static final fun getBlue-w2LRezQ (I)B
	public static final fun getGreen-w2LRezQ (I)B
	public static final fun getRed-w2LRezQ (I)B
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public static final fun isTransparent-impl (I)Z
	public static final fun toHexColor-impl (I)Ljava/lang/String;
	public static final fun toHexLiteral-impl (I)Ljava/lang/String;
	public static final fun toName-impl (I)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
}

public final class io/github/composegears/valkyrie/ir/IrColor$Companion {
	public final fun getNameToArgb ()Ljava/util/Map;
}

public abstract interface class io/github/composegears/valkyrie/ir/IrFill {
}

public final class io/github/composegears/valkyrie/ir/IrFill$Color : io/github/composegears/valkyrie/ir/IrFill {
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-Sk8BoAU ()I
	public final fun copy-UxrI8-M (I)Lio/github/composegears/valkyrie/ir/IrFill$Color;
	public static synthetic fun copy-UxrI8-M$default (Lio/github/composegears/valkyrie/ir/IrFill$Color;IILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrFill$Color;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIrColor-Sk8BoAU ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrFill$ColorStop {
	public synthetic fun <init> (FILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2-Sk8BoAU ()I
	public final fun copy-zMhHKmk (FI)Lio/github/composegears/valkyrie/ir/IrFill$ColorStop;
	public static synthetic fun copy-zMhHKmk$default (Lio/github/composegears/valkyrie/ir/IrFill$ColorStop;FIILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrFill$ColorStop;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIrColor-Sk8BoAU ()I
	public final fun getOffset ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrFill$LinearGradient : io/github/composegears/valkyrie/ir/IrFill {
	public fun <init> (FFFFLjava/util/List;)V
	public synthetic fun <init> (FFFFLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()Ljava/util/List;
	public final fun copy (FFFFLjava/util/List;)Lio/github/composegears/valkyrie/ir/IrFill$LinearGradient;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrFill$LinearGradient;FFFFLjava/util/List;ILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrFill$LinearGradient;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColorStops ()Ljava/util/List;
	public final fun getEndX ()F
	public final fun getEndY ()F
	public final fun getStartX ()F
	public final fun getStartY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrFill$RadialGradient : io/github/composegears/valkyrie/ir/IrFill {
	public fun <init> (FFFLjava/util/List;)V
	public synthetic fun <init> (FFFLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Ljava/util/List;
	public final fun copy (FFFLjava/util/List;)Lio/github/composegears/valkyrie/ir/IrFill$RadialGradient;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrFill$RadialGradient;FFFLjava/util/List;ILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrFill$RadialGradient;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCenterX ()F
	public final fun getCenterY ()F
	public final fun getColorStops ()Ljava/util/List;
	public final fun getRadius ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrImageVector {
	public fun <init> (Ljava/lang/String;ZFFFFLjava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;ZFFFFLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZFFFFLjava/util/List;)Lio/github/composegears/valkyrie/ir/IrImageVector;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrImageVector;Ljava/lang/String;ZFFFFLjava/util/List;ILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrImageVector;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoMirror ()Z
	public final fun getDefaultHeight ()F
	public final fun getDefaultWidth ()F
	public final fun getName ()Ljava/lang/String;
	public final fun getNodes ()Ljava/util/List;
	public final fun getViewportHeight ()F
	public final fun getViewportWidth ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrImageVectorKt {
	public static final fun getAspectRatio (Lio/github/composegears/valkyrie/ir/IrImageVector;)F
}

public final class io/github/composegears/valkyrie/ir/IrPathFillType : java/lang/Enum {
	public static final field EvenOdd Lio/github/composegears/valkyrie/ir/IrPathFillType;
	public static final field NonZero Lio/github/composegears/valkyrie/ir/IrPathFillType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/composegears/valkyrie/ir/IrPathFillType;
	public static fun values ()[Lio/github/composegears/valkyrie/ir/IrPathFillType;
}

public abstract interface class io/github/composegears/valkyrie/ir/IrPathNode {
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$ArcTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFZZFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun copy (FFFZZFF)Lio/github/composegears/valkyrie/ir/IrPathNode$ArcTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$ArcTo;FFFZZFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$ArcTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArcStartX ()F
	public final fun getArcStartY ()F
	public final fun getHorizontalEllipseRadius ()F
	public final fun getTheta ()F
	public final fun getVerticalEllipseRadius ()F
	public fun hashCode ()I
	public final fun isMoreThanHalf ()Z
	public final fun isPositiveArc ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$Close : io/github/composegears/valkyrie/ir/IrPathNode {
	public static final field INSTANCE Lio/github/composegears/valkyrie/ir/IrPathNode$Close;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$CurveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun copy (FFFFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$CurveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$CurveTo;FFFFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$CurveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX1 ()F
	public final fun getX2 ()F
	public final fun getX3 ()F
	public final fun getY1 ()F
	public final fun getY2 ()F
	public final fun getY3 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$HorizontalTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (F)V
	public final fun component1 ()F
	public final fun copy (F)Lio/github/composegears/valkyrie/ir/IrPathNode$HorizontalTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$HorizontalTo;FILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$HorizontalTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$LineTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$LineTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$LineTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$LineTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$MoveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$MoveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$MoveTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$MoveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$QuadTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$QuadTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$QuadTo;FFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$QuadTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX1 ()F
	public final fun getX2 ()F
	public final fun getY1 ()F
	public final fun getY2 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$ReflectiveCurveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveCurveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveCurveTo;FFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveCurveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX1 ()F
	public final fun getX2 ()F
	public final fun getY1 ()F
	public final fun getY2 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$ReflectiveQuadTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveQuadTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveQuadTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$ReflectiveQuadTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeArcTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFZZFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun copy (FFFZZFF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeArcTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeArcTo;FFFZZFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeArcTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArcStartDx ()F
	public final fun getArcStartDy ()F
	public final fun getHorizontalEllipseRadius ()F
	public final fun getTheta ()F
	public final fun getVerticalEllipseRadius ()F
	public fun hashCode ()I
	public final fun isMoreThanHalf ()Z
	public final fun isPositiveArc ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeCurveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun copy (FFFFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeCurveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeCurveTo;FFFFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeCurveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDx1 ()F
	public final fun getDx2 ()F
	public final fun getDx3 ()F
	public final fun getDy1 ()F
	public final fun getDy2 ()F
	public final fun getDy3 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeHorizontalTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (F)V
	public final fun component1 ()F
	public final fun copy (F)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeHorizontalTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeHorizontalTo;FILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeHorizontalTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeLineTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeLineTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeLineTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeLineTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeMoveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeMoveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeMoveTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeMoveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeQuadTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeQuadTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeQuadTo;FFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeQuadTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX1 ()F
	public final fun getX2 ()F
	public final fun getY1 ()F
	public final fun getY2 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveCurveTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FFFF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun copy (FFFF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveCurveTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveCurveTo;FFFFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveCurveTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX1 ()F
	public final fun getX2 ()F
	public final fun getY1 ()F
	public final fun getY2 ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveQuadTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (FF)V
	public final fun component1 ()F
	public final fun component2 ()F
	public final fun copy (FF)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveQuadTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveQuadTo;FFILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeReflectiveQuadTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getX ()F
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$RelativeVerticalTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (F)V
	public final fun component1 ()F
	public final fun copy (F)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeVerticalTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeVerticalTo;FILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$RelativeVerticalTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrPathNode$VerticalTo : io/github/composegears/valkyrie/ir/IrPathNode {
	public fun <init> (F)V
	public final fun component1 ()F
	public final fun copy (F)Lio/github/composegears/valkyrie/ir/IrPathNode$VerticalTo;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrPathNode$VerticalTo;FILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrPathNode$VerticalTo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/composegears/valkyrie/ir/IrStroke {
}

public final class io/github/composegears/valkyrie/ir/IrStroke$Color : io/github/composegears/valkyrie/ir/IrStroke {
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-Sk8BoAU ()I
	public final fun copy-UxrI8-M (I)Lio/github/composegears/valkyrie/ir/IrStroke$Color;
	public static synthetic fun copy-UxrI8-M$default (Lio/github/composegears/valkyrie/ir/IrStroke$Color;IILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrStroke$Color;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIrColor-Sk8BoAU ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrStrokeLineCap : java/lang/Enum {
	public static final field Butt Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public static final field Round Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public static final field Square Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public static fun values ()[Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
}

public final class io/github/composegears/valkyrie/ir/IrStrokeLineJoin : java/lang/Enum {
	public static final field Bevel Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public static final field Miter Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public static final field Round Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public static fun values ()[Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
}

public abstract interface class io/github/composegears/valkyrie/ir/IrVectorNode {
}

public final class io/github/composegears/valkyrie/ir/IrVectorNode$IrGroup : io/github/composegears/valkyrie/ir/IrVectorNode {
	public fun <init> (Ljava/lang/String;FFFFFFFLjava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;FFFFFFFLjava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/util/List;
	public final fun component2 ()F
	public final fun component3 ()F
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()F
	public final fun component8 ()F
	public final fun component9 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;FFFFFFFLjava/util/List;Ljava/util/List;)Lio/github/composegears/valkyrie/ir/IrVectorNode$IrGroup;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrVectorNode$IrGroup;Ljava/lang/String;FFFFFFFLjava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrVectorNode$IrGroup;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClipPathData ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getNodes ()Ljava/util/List;
	public final fun getPivotX ()F
	public final fun getPivotY ()F
	public final fun getRotate ()F
	public final fun getScaleX ()F
	public final fun getScaleY ()F
	public final fun getTranslationX ()F
	public final fun getTranslationY ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/IrVectorNode$IrPath : io/github/composegears/valkyrie/ir/IrVectorNode {
	public fun <init> (Ljava/lang/String;Lio/github/composegears/valkyrie/ir/IrFill;FLio/github/composegears/valkyrie/ir/IrStroke;FFLio/github/composegears/valkyrie/ir/IrStrokeLineCap;Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;FLio/github/composegears/valkyrie/ir/IrPathFillType;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lio/github/composegears/valkyrie/ir/IrFill;FLio/github/composegears/valkyrie/ir/IrStroke;FFLio/github/composegears/valkyrie/ir/IrStrokeLineCap;Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;FLio/github/composegears/valkyrie/ir/IrPathFillType;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lio/github/composegears/valkyrie/ir/IrPathFillType;
	public final fun component11 ()Ljava/util/List;
	public final fun component2 ()Lio/github/composegears/valkyrie/ir/IrFill;
	public final fun component3 ()F
	public final fun component4 ()Lio/github/composegears/valkyrie/ir/IrStroke;
	public final fun component5 ()F
	public final fun component6 ()F
	public final fun component7 ()Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public final fun component8 ()Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public final fun component9 ()F
	public final fun copy (Ljava/lang/String;Lio/github/composegears/valkyrie/ir/IrFill;FLio/github/composegears/valkyrie/ir/IrStroke;FFLio/github/composegears/valkyrie/ir/IrStrokeLineCap;Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;FLio/github/composegears/valkyrie/ir/IrPathFillType;Ljava/util/List;)Lio/github/composegears/valkyrie/ir/IrVectorNode$IrPath;
	public static synthetic fun copy$default (Lio/github/composegears/valkyrie/ir/IrVectorNode$IrPath;Ljava/lang/String;Lio/github/composegears/valkyrie/ir/IrFill;FLio/github/composegears/valkyrie/ir/IrStroke;FFLio/github/composegears/valkyrie/ir/IrStrokeLineCap;Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;FLio/github/composegears/valkyrie/ir/IrPathFillType;Ljava/util/List;ILjava/lang/Object;)Lio/github/composegears/valkyrie/ir/IrVectorNode$IrPath;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFill ()Lio/github/composegears/valkyrie/ir/IrFill;
	public final fun getFillAlpha ()F
	public final fun getName ()Ljava/lang/String;
	public final fun getPathFillType ()Lio/github/composegears/valkyrie/ir/IrPathFillType;
	public final fun getPaths ()Ljava/util/List;
	public final fun getStroke ()Lio/github/composegears/valkyrie/ir/IrStroke;
	public final fun getStrokeAlpha ()F
	public final fun getStrokeLineCap ()Lio/github/composegears/valkyrie/ir/IrStrokeLineCap;
	public final fun getStrokeLineJoin ()Lio/github/composegears/valkyrie/ir/IrStrokeLineJoin;
	public final fun getStrokeLineMiter ()F
	public final fun getStrokeLineWidth ()F
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/composegears/valkyrie/ir/util/ColorClassification {
	public static final field INSTANCE Lio/github/composegears/valkyrie/ir/util/ColorClassification;
	public final fun from (Ljava/util/List;)Lio/github/composegears/valkyrie/ir/util/DominantShade;
}

public final class io/github/composegears/valkyrie/ir/util/DominantShade : java/lang/Enum {
	public static final field Black Lio/github/composegears/valkyrie/ir/util/DominantShade;
	public static final field Mixed Lio/github/composegears/valkyrie/ir/util/DominantShade;
	public static final field White Lio/github/composegears/valkyrie/ir/util/DominantShade;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/composegears/valkyrie/ir/util/DominantShade;
	public static fun values ()[Lio/github/composegears/valkyrie/ir/util/DominantShade;
}

public final class io/github/composegears/valkyrie/ir/util/IrImageVectorColorKt {
	public static final fun iconColors (Lio/github/composegears/valkyrie/ir/IrImageVector;)Ljava/util/List;
}

public final class io/github/composegears/valkyrie/ir/util/PathNodeKt {
	public static final fun toPathNodes (C[F)Ljava/util/List;
}

